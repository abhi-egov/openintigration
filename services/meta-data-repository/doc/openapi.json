{
  "openapi": "3.0.0",
  "info": {
    "title": "OIH MetaData Service REST API",
    "description": "REST API for the OIH MetaData Service.",
    "version": "0.0.6",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "Domains",
      "description": "Domain management"
    }
  ],
  "servers": [
    {
      "url": "http://metadata.openintegrationhub.com/api/v1"
    }
  ],
  "paths": {
    "/domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Retrieve the available domains for the authenticated user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Domain"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "Create a new Domain.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Creates a new Domain for the authenticated user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MutableDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Domain"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domains/{domainId}": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Retrieve a domain with given ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Provides details of a domain with a given ID.",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Domain"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Domains"
        ],
        "summary": "Update a domain by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Updates details of a domain with a given ID.",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MutableDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Domain"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "summary": "Delete a domain by ID.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Removes any linked schema and deletes Domain.",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Domain"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domains/{domainId}/schemas": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Retrieve the available models for the authenticated user.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "description": "ID of the domain to retrieve models of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Domain"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/Meta"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "Create schema.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "This endpoint is used to send new schema for a given domain.",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "description": "ID of the domain to import model into",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MutableSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Schema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/domains/{domainId}/schemas/import": {
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "Bulk import models.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "This endpoint is used to upload multiple new models for a given domain. Accepts zip or tgz archive format.",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "description": "ID of the domain to import models into",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "archive": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/domains/{domainId}/schemas/{uri}": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Retrieve a schema by URI.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Provides details of a schema with a given URI.",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "description": "ID of the domain to retrieve schema of",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uri",
            "required": true,
            "description": "URI of the schema",
            "schema": {
              "type": "string"
            },
            "example": "#address"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Domains"
        ],
        "summary": "Update a schema with given URI.",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Updates a schema with given URI.",
        "parameters": [
          {
            "in": "path",
            "name": "domainId",
            "required": true,
            "description": "ID of the domain to update schema for",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uri",
            "required": true,
            "description": "URI of the schema to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MutableSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Schema"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "summary": "Delete a schema by uri",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "domainId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uri",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The model was successfully deleted"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Domain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MutableDomain"
          },
          {
            "type": "object",
            "required": [
              "id",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "description": "Client creation time",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "description": "Client update time",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "MutableDomain": {
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "owners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Owner"
            }
          }
        }
      },
      "SchemaBase": {
        "required": [
          "name",
          "uri",
          "payload"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "example": {
              "$id": "address",
              "required": [
                "street_address",
                "city",
                "state"
              ],
              "properties": {
                "street_address": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "MutableSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SchemaBase"
          },
          {
            "type": "object",
            "properties": {
              "owners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          }
        ]
      },
      "Schema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MutableSchema"
          },
          {
            "type": "object",
            "required": [
              "id",
              "createdAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "uri": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "description": "Client creation time",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "description": "Client update time",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "Owner": {
        "type": "object",
        "required": [
          "entityId",
          "entityType"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Type of Owner entity, e.g. GROUP, TENANT, USER, etc."
          }
        }
      },
      "Meta": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "totalPages": {
            "type": "integer"
          }
        }
      }
    }
  }
}